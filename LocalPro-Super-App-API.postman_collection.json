{
  "info": {
    "name": "LocalPro Super App API",
    "description": "Complete API collection for LocalPro Super App - A comprehensive platform for local services with trust & verification, real-time communication, advanced analytics, job board, supplies, academy, finance, rentals, advertising, facility care, premium subscriptions, Google Maps integration, email notifications, PayPal and PayMaya payment processing. Enhanced with LocalPro-inspired features including professional verification, dispute resolution, business insights, employment platform, location-based services, multi-provider email support, and dual payment gateway integration.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "2.1.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:4000",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "serviceId",
      "value": "",
      "type": "string"
    },
    {
      "key": "bookingId",
      "value": "",
      "type": "string"
    },
    {
      "key": "productId",
      "value": "",
      "type": "string"
    },
    {
      "key": "courseId",
      "value": "",
      "type": "string"
    },
    {
      "key": "loanId",
      "value": "",
      "type": "string"
    },
    {
      "key": "rentalItemId",
      "value": "",
      "type": "string"
    },
    {
      "key": "campaignId",
      "value": "",
      "type": "string"
    },
    {
      "key": "verificationRequestId",
      "value": "",
      "type": "string"
    },
    {
      "key": "disputeId",
      "value": "",
      "type": "string"
    },
    {
      "key": "conversationId",
      "value": "",
      "type": "string"
    },
    {
      "key": "messageId",
      "value": "",
      "type": "string"
    },
    {
      "key": "notificationId",
      "value": "",
      "type": "string"
    },
    {
      "key": "participantId",
      "value": "",
      "type": "string"
    },
    {
      "key": "checkoutId",
      "value": "",
      "type": "string"
    },
    {
      "key": "paymentId",
      "value": "",
      "type": "string"
    },
    {
      "key": "invoiceId",
      "value": "",
      "type": "string"
    },
    {
      "key": "paypalOrderId",
      "value": "",
      "type": "string"
    },
    {
      "key": "paypalSubscriptionId",
      "value": "",
      "type": "string"
    },
    {
      "key": "jobId",
      "value": "",
      "type": "string"
    },
    {
      "key": "applicationId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Send Verification Code",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    console.log('Verification code sent successfully');",
                  "    console.log('Check console for mock verification code if in development mode');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"phoneNumber\": \"+1234567890\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/send-code",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "send-code"]
            }
          },
          "response": []
        },
        {
          "name": "Verify Code & Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.token) {",
                  "        pm.collectionVariables.set('authToken', response.token);",
                  "        pm.collectionVariables.set('userId', response.user.id);",
                  "        console.log('Authentication successful, token saved');",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"phoneNumber\": \"+1234567890\",\n  \"code\": \"123456\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john.doe@example.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/verify-code",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "verify-code"]
            }
          },
          "response": []
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "me"]
            }
          },
          "response": []
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"profile\": {\n    \"bio\": \"Professional service provider\",\n    \"address\": {\n      \"street\": \"123 Main St\",\n      \"city\": \"New York\",\n      \"state\": \"NY\",\n      \"zipCode\": \"10001\",\n      \"country\": \"USA\"\n    },\n    \"skills\": [\"cleaning\", \"maintenance\"]\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "profile"]
            }
          },
          "response": []
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "logout"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Marketplace",
      "item": [
        {
          "name": "Get All Services",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/marketplace/services?category=cleaning&page=1&limit=10&sortBy=rating.average&sortOrder=desc",
              "host": ["{{baseUrl}}"],
              "path": ["api", "marketplace", "services"],
              "query": [
                {
                  "key": "category",
                  "value": "cleaning"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "sortBy",
                  "value": "rating.average"
                },
                {
                  "key": "sortOrder",
                  "value": "desc"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Nearby Services",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/marketplace/services/nearby?lat=40.7580&lng=-73.9855&radius=50000&category=cleaning&page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "marketplace", "services", "nearby"],
              "query": [
                {
                  "key": "lat",
                  "value": "40.7580"
                },
                {
                  "key": "lng",
                  "value": "-73.9855"
                },
                {
                  "key": "radius",
                  "value": "50000"
                },
                {
                  "key": "category",
                  "value": "cleaning"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Single Service",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/marketplace/services/{{serviceId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "marketplace", "services", "{{serviceId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Create Service (Provider)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('serviceId', response.data._id);",
                  "    console.log('Service created, ID saved');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Professional House Cleaning\",\n  \"description\": \"Complete house cleaning service including kitchen, bathrooms, living areas, and bedrooms.\",\n  \"category\": \"cleaning\",\n  \"subcategory\": \"house_cleaning\",\n  \"pricing\": {\n    \"type\": \"hourly\",\n    \"basePrice\": 25,\n    \"currency\": \"USD\"\n  },\n  \"serviceArea\": [\"10001\", \"10002\", \"10003\"],\n  \"features\": [\"Eco-friendly products\", \"Insured service\", \"Same-day booking\"],\n  \"requirements\": [\"Access to water\", \"Parking available\"],\n  \"serviceType\": \"one_time\",\n  \"estimatedDuration\": {\n    \"min\": 2,\n    \"max\": 6\n  },\n  \"teamSize\": 2,\n  \"equipmentProvided\": true,\n  \"materialsIncluded\": false,\n  \"warranty\": {\n    \"hasWarranty\": true,\n    \"duration\": 30,\n    \"description\": \"30-day satisfaction guarantee\"\n  },\n  \"insurance\": {\n    \"covered\": true,\n    \"coverageAmount\": 1000000\n  },\n  \"emergencyService\": {\n    \"available\": true,\n    \"surcharge\": 50,\n    \"responseTime\": \"within 2 hours\"\n  },\n  \"servicePackages\": [\n    {\n      \"name\": \"Basic Cleaning\",\n      \"description\": \"Standard house cleaning\",\n      \"price\": 75,\n      \"features\": [\"Living areas\", \"Kitchen\", \"Bathrooms\"],\n      \"duration\": 3\n    },\n    {\n      \"name\": \"Deep Cleaning\",\n      \"description\": \"Comprehensive deep cleaning\",\n      \"price\": 150,\n      \"features\": [\"Everything in Basic\", \"Inside appliances\", \"Baseboards\", \"Light fixtures\"],\n      \"duration\": 6\n    }\n  ],\n  \"addOns\": [\n    {\n      \"name\": \"Window Cleaning\",\n      \"description\": \"Interior and exterior windows\",\n      \"price\": 25,\n      \"category\": \"cleaning\"\n    },\n    {\n      \"name\": \"Refrigerator Cleaning\",\n      \"description\": \"Deep clean inside refrigerator\",\n      \"price\": 30,\n      \"category\": \"cleaning\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/marketplace/services",
              "host": ["{{baseUrl}}"],
              "path": ["api", "marketplace", "services"]
            }
          },
          "response": []
        },
        {
          "name": "Create Booking",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('bookingId', response.data._id);",
                  "    console.log('Booking created, ID saved');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"serviceId\": \"{{serviceId}}\",\n  \"bookingDate\": \"2024-02-15T10:00:00Z\",\n  \"duration\": 3,\n  \"address\": {\n    \"street\": \"456 Oak Ave\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zipCode\": \"10001\",\n    \"country\": \"USA\",\n    \"coordinates\": {\n      \"lat\": 40.7128,\n      \"lng\": -74.0060\n    }\n  },\n  \"specialInstructions\": \"Please use eco-friendly products only. Ring doorbell twice.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/marketplace/bookings",
              "host": ["{{baseUrl}}"],
              "path": ["api", "marketplace", "bookings"]
            }
          },
          "response": []
        },
        {
          "name": "Get User Bookings",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/marketplace/bookings?type=client",
              "host": ["{{baseUrl}}"],
              "path": ["api", "marketplace", "bookings"],
              "query": [
                {
                  "key": "type",
                  "value": "client"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Update Booking Status",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"confirmed\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/marketplace/bookings/{{bookingId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "marketplace", "bookings", "{{bookingId}}", "status"]
            }
          },
          "response": []
        },
        {
          "name": "Add Review",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"rating\": 5,\n  \"comment\": \"Excellent service! Very professional and thorough.\",\n  \"categories\": {\n    \"quality\": 5,\n    \"timeliness\": 4,\n    \"communication\": 5,\n    \"value\": 5\n  },\n  \"wouldRecommend\": true,\n  \"photos\": [\n    \"https://example.com/review-photos/after1.jpg\",\n    \"https://example.com/review-photos/after2.jpg\"\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/marketplace/bookings/{{bookingId}}/review",
              "host": ["{{baseUrl}}"],
              "path": ["api", "marketplace", "bookings", "{{bookingId}}", "review"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Supplies & Materials",
      "item": [
        {
          "name": "Get All Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/supplies/products?category=cleaning_supplies&page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "supplies", "products"],
              "query": [
                {
                  "key": "category",
                  "value": "cleaning_supplies"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Single Product",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/supplies/products/{{productId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "supplies", "products", "{{productId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Create Product (Supplier)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('productId', response.data._id);",
                  "    console.log('Product created, ID saved');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Eco-Friendly All-Purpose Cleaner\",\n  \"description\": \"Biodegradable all-purpose cleaner safe for all surfaces\",\n  \"category\": \"cleaning_supplies\",\n  \"subcategory\": \"cleaners\",\n  \"brand\": \"GreenClean\",\n  \"sku\": \"GC-APC-001\",\n  \"pricing\": {\n    \"retailPrice\": 12.99,\n    \"wholesalePrice\": 8.99,\n    \"currency\": \"USD\"\n  },\n  \"inventory\": {\n    \"quantity\": 100,\n    \"minStock\": 10,\n    \"maxStock\": 200,\n    \"location\": \"Warehouse A\"\n  },\n  \"specifications\": {\n    \"weight\": \"32 oz\",\n    \"material\": \"Plant-based ingredients\",\n    \"color\": \"Clear\"\n  },\n  \"isSubscriptionEligible\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/supplies/products",
              "host": ["{{baseUrl}}"],
              "path": ["api", "supplies", "products"]
            }
          },
          "response": []
        },
        {
          "name": "Get Subscription Kits",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/supplies/subscription-kits",
              "host": ["{{baseUrl}}"],
              "path": ["api", "supplies", "subscription-kits"]
            }
          },
          "response": []
        },
        {
          "name": "Create Order",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"items\": [\n    {\n      \"product\": \"{{productId}}\",\n      \"quantity\": 2\n    }\n  ],\n  \"shippingAddress\": {\n    \"street\": \"789 Pine St\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zipCode\": \"10001\",\n    \"country\": \"USA\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/supplies/orders",
              "host": ["{{baseUrl}}"],
              "path": ["api", "supplies", "orders"]
            }
          },
          "response": []
        },
        {
          "name": "Get User Orders",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/supplies/orders",
              "host": ["{{baseUrl}}"],
              "path": ["api", "supplies", "orders"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Academy",
      "item": [
        {
          "name": "Get All Courses",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/academy/courses?category=cleaning&level=beginner",
              "host": ["{{baseUrl}}"],
              "path": ["api", "academy", "courses"],
              "query": [
                {
                  "key": "category",
                  "value": "cleaning"
                },
                {
                  "key": "level",
                  "value": "beginner"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Single Course",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/academy/courses/{{courseId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "academy", "courses", "{{courseId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Create Course (Instructor)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('courseId', response.data._id);",
                  "    console.log('Course created, ID saved');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Professional Cleaning Techniques\",\n  \"description\": \"Learn advanced cleaning techniques for residential and commercial properties\",\n  \"category\": \"cleaning\",\n  \"level\": \"intermediate\",\n  \"duration\": {\n    \"hours\": 8,\n    \"weeks\": 2\n  },\n  \"pricing\": {\n    \"regularPrice\": 199,\n    \"currency\": \"USD\"\n  },\n  \"curriculum\": [\n    {\n      \"module\": \"Introduction to Professional Cleaning\",\n      \"lessons\": [\n        {\n          \"title\": \"Cleaning Fundamentals\",\n          \"description\": \"Basic principles of effective cleaning\",\n          \"duration\": 60,\n          \"type\": \"video\"\n        }\n      ]\n    }\n  ],\n  \"learningOutcomes\": [\n    \"Master professional cleaning techniques\",\n    \"Understand safety protocols\",\n    \"Learn time management skills\"\n  ],\n  \"certification\": {\n    \"isAvailable\": true,\n    \"name\": \"Professional Cleaning Certificate\",\n    \"issuer\": \"LocalPro Academy\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/academy/courses",
              "host": ["{{baseUrl}}"],
              "path": ["api", "academy", "courses"]
            }
          },
          "response": []
        },
        {
          "name": "Enroll in Course",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"courseId\": \"{{courseId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/academy/enroll",
              "host": ["{{baseUrl}}"],
              "path": ["api", "academy", "enroll"]
            }
          },
          "response": []
        },
        {
          "name": "Get User Enrollments",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/academy/enrollments",
              "host": ["{{baseUrl}}"],
              "path": ["api", "academy", "enrollments"]
            }
          },
          "response": []
        },
        {
          "name": "Get Certifications",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/academy/certifications",
              "host": ["{{baseUrl}}"],
              "path": ["api", "academy", "certifications"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Finance",
      "item": [
        {
          "name": "Apply for Loan",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('loanId', response.data._id);",
                  "    console.log('Loan application submitted, ID saved');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"micro_loan\",\n  \"amount\": 5000,\n  \"purpose\": \"Equipment purchase for cleaning business\",\n  \"term\": {\n    \"duration\": 12,\n    \"interestRate\": 8.5,\n    \"repaymentFrequency\": \"monthly\"\n  },\n  \"documents\": [\n    {\n      \"type\": \"income_proof\",\n      \"url\": \"https://example.com/income-proof.pdf\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/finance/loans/apply",
              "host": ["{{baseUrl}}"],
              "path": ["api", "finance", "loans", "apply"]
            }
          },
          "response": []
        },
        {
          "name": "Get User Loans",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/finance/loans",
              "host": ["{{baseUrl}}"],
              "path": ["api", "finance", "loans"]
            }
          },
          "response": []
        },
        {
          "name": "Apply for Salary Advance",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 1000,\n  \"employerId\": \"{{userId}}\",\n  \"salary\": 3000,\n  \"nextPayDate\": \"2024-02-28\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/finance/salary-advance/apply",
              "host": ["{{baseUrl}}"],
              "path": ["api", "finance", "salary-advance", "apply"]
            }
          },
          "response": []
        },
        {
          "name": "Get User Salary Advances",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/finance/salary-advances",
              "host": ["{{baseUrl}}"],
              "path": ["api", "finance", "salary-advances"]
            }
          },
          "response": []
        },
        {
          "name": "Get User Transactions",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/finance/transactions",
              "host": ["{{baseUrl}}"],
              "path": ["api", "finance", "transactions"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Rentals",
      "item": [
        {
          "name": "Get All Rental Items",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/rentals/items?category=tools&page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "rentals", "items"],
              "query": [
                {
                  "key": "category",
                  "value": "tools"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Single Rental Item",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/rentals/items/{{rentalItemId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "rentals", "items", "{{rentalItemId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Create Rental Item",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('rentalItemId', response.data._id);",
                  "    console.log('Rental item created, ID saved');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Professional Pressure Washer\",\n  \"description\": \"High-pressure washer for cleaning driveways, patios, and exterior surfaces\",\n  \"category\": \"tools\",\n  \"subcategory\": \"cleaning_equipment\",\n  \"pricing\": {\n    \"hourly\": 15,\n    \"daily\": 75,\n    \"weekly\": 300,\n    \"monthly\": 1000,\n    \"currency\": \"USD\"\n  },\n  \"location\": {\n    \"address\": {\n      \"street\": \"123 Tool St\",\n      \"city\": \"New York\",\n      \"state\": \"NY\",\n      \"zipCode\": \"10001\",\n      \"country\": \"USA\"\n    },\n    \"pickupRequired\": true,\n    \"deliveryAvailable\": true,\n    \"deliveryFee\": 25\n  },\n  \"specifications\": {\n    \"brand\": \"ProClean\",\n    \"model\": \"PC-2000\",\n    \"condition\": \"excellent\",\n    \"features\": [\"Adjustable pressure\", \"Multiple nozzles\", \"Hose included\"]\n  },\n  \"requirements\": {\n    \"minAge\": 18,\n    \"licenseRequired\": false,\n    \"deposit\": 100,\n    \"insuranceRequired\": true\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/rentals/items",
              "host": ["{{baseUrl}}"],
              "path": ["api", "rentals", "items"]
            }
          },
          "response": []
        },
        {
          "name": "Create Rental Booking",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"itemId\": \"{{rentalItemId}}\",\n  \"startDate\": \"2024-02-15T09:00:00Z\",\n  \"endDate\": \"2024-02-15T17:00:00Z\",\n  \"pickupLocation\": {\n    \"address\": \"123 Tool St, New York, NY 10001\",\n    \"coordinates\": {\n      \"lat\": 40.7128,\n      \"lng\": -74.0060\n    }\n  },\n  \"contactPerson\": \"John Doe\",\n  \"contactPhone\": \"+1234567890\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/rentals/book",
              "host": ["{{baseUrl}}"],
              "path": ["api", "rentals", "book"]
            }
          },
          "response": []
        },
        {
          "name": "Get User Rentals",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/rentals?type=renter",
              "host": ["{{baseUrl}}"],
              "path": ["api", "rentals"],
              "query": [
                {
                  "key": "type",
                  "value": "renter"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Advertising",
      "item": [
        {
          "name": "Get Active Ads",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/ads/active?category=hardware_stores&limit=5",
              "host": ["{{baseUrl}}"],
              "path": ["api", "ads", "active"],
              "query": [
                {
                  "key": "category",
                  "value": "hardware_stores"
                },
                {
                  "key": "limit",
                  "value": "5"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Register as Advertiser",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"businessName\": \"ABC Hardware Store\",\n  \"businessType\": \"hardware_store\",\n  \"description\": \"Full-service hardware store serving the community for 20+ years\",\n  \"contact\": {\n    \"email\": \"info@abchardware.com\",\n    \"phone\": \"+1234567890\",\n    \"website\": \"https://abchardware.com\",\n    \"address\": {\n      \"street\": \"456 Hardware Ave\",\n      \"city\": \"New York\",\n      \"state\": \"NY\",\n      \"zipCode\": \"10001\",\n      \"country\": \"USA\"\n    }\n  },\n  \"documents\": [\n    {\n      \"type\": \"business_license\",\n      \"url\": \"https://example.com/business-license.pdf\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/ads/advertisers/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "ads", "advertisers", "register"]
            }
          },
          "response": []
        },
        {
          "name": "Create Ad Campaign",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('campaignId', response.data._id);",
                  "    console.log('Ad campaign created, ID saved');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Professional Tools Sale\",\n  \"description\": \"Get 20% off on all professional cleaning tools this month\",\n  \"type\": \"banner\",\n  \"category\": \"hardware_stores\",\n  \"targetAudience\": {\n    \"demographics\": {\n      \"ageRange\": [25, 55],\n      \"location\": [\"New York\", \"Brooklyn\", \"Queens\"]\n    },\n    \"behavior\": {\n      \"userTypes\": [\"providers\", \"clients\"],\n      \"activityLevel\": \"active\"\n    }\n  },\n  \"content\": {\n    \"headline\": \"Professional Tools Sale - 20% Off!\",\n    \"body\": \"Upgrade your cleaning business with professional-grade tools. Limited time offer!\",\n    \"callToAction\": {\n      \"text\": \"Shop Now\",\n      \"url\": \"https://abchardware.com/sale\"\n    }\n  },\n  \"budget\": {\n    \"total\": 1000,\n    \"daily\": 50,\n    \"currency\": \"USD\"\n  },\n  \"bidding\": {\n    \"strategy\": \"cpc\",\n    \"bidAmount\": 2.50,\n    \"maxBid\": 5.00\n  },\n  \"schedule\": {\n    \"startDate\": \"2024-02-01T00:00:00Z\",\n    \"endDate\": \"2024-02-29T23:59:59Z\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/ads/campaigns",
              "host": ["{{baseUrl}}"],
              "path": ["api", "ads", "campaigns"]
            }
          },
          "response": []
        },
        {
          "name": "Get Advertiser Campaigns",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/ads/campaigns",
              "host": ["{{baseUrl}}"],
              "path": ["api", "ads", "campaigns"]
            }
          },
          "response": []
        },
        {
          "name": "Record Ad Impression",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"campaignId\": \"{{campaignId}}\",\n  \"type\": \"impression\",\n  \"context\": {\n    \"page\": \"marketplace\",\n    \"section\": \"services\",\n    \"position\": \"top\"\n  },\n  \"device\": \"mobile\",\n  \"location\": {\n    \"ip\": \"192.168.1.1\",\n    \"country\": \"USA\",\n    \"city\": \"New York\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/ads/impression",
              "host": ["{{baseUrl}}"],
              "path": ["api", "ads", "impression"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "FacilityCare",
      "item": [
        {
          "name": "Get Facility Care Services",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/facility-care/services?category=janitorial&page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "facility-care", "services"],
              "query": [
                {
                  "key": "category",
                  "value": "janitorial"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Create Facility Care Service (Provider)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Office Cleaning Service\",\n  \"description\": \"Comprehensive office cleaning including desks, floors, restrooms, and common areas\",\n  \"category\": \"janitorial\",\n  \"pricing\": {\n    \"type\": \"monthly\",\n    \"basePrice\": 500,\n    \"currency\": \"USD\"\n  },\n  \"serviceArea\": [\"10001\", \"10002\", \"10003\"],\n  \"features\": [\"Eco-friendly products\", \"Flexible scheduling\", \"Insured service\"],\n  \"requirements\": [\"After-hours access\", \"Storage space for supplies\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/facility-care/services",
              "host": ["{{baseUrl}}"],
              "path": ["api", "facility-care", "services"]
            }
          },
          "response": []
        },
        {
          "name": "Create Contract",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"serviceId\": \"{{serviceId}}\",\n  \"facility\": {\n    \"name\": \"ABC Corporate Office\",\n    \"address\": {\n      \"street\": \"789 Business Blvd\",\n      \"city\": \"New York\",\n      \"state\": \"NY\",\n      \"zipCode\": \"10001\",\n      \"country\": \"USA\"\n    },\n    \"size\": {\n      \"area\": 5000,\n      \"unit\": \"sqft\"\n    },\n    \"type\": \"office\"\n  },\n  \"contractDetails\": {\n    \"startDate\": \"2024-02-01\",\n    \"endDate\": \"2024-12-31\",\n    \"duration\": 11,\n    \"frequency\": \"weekly\",\n    \"scope\": [\"Office cleaning\", \"Restroom maintenance\", \"Trash removal\"],\n    \"specialRequirements\": [\"Use eco-friendly products only\"]\n  },\n  \"pricing\": {\n    \"basePrice\": 500,\n    \"frequency\": \"monthly\",\n    \"totalAmount\": 5500,\n    \"currency\": \"USD\"\n  },\n  \"payment\": {\n    \"terms\": \"net_30\",\n    \"method\": \"bank_transfer\",\n    \"autoPay\": true\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/facility-care/contracts",
              "host": ["{{baseUrl}}"],
              "path": ["api", "facility-care", "contracts"]
            }
          },
          "response": []
        },
        {
          "name": "Get User Contracts",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/facility-care/contracts",
              "host": ["{{baseUrl}}"],
              "path": ["api", "facility-care", "contracts"]
            }
          },
          "response": []
        },
        {
          "name": "Create Subscription",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"serviceId\": \"{{serviceId}}\",\n  \"subscriptionType\": \"janitorial\",\n  \"plan\": {\n    \"name\": \"Standard Cleaning Plan\",\n    \"features\": [\"Weekly cleaning\", \"Restroom maintenance\", \"Trash removal\"],\n    \"frequency\": \"weekly\",\n    \"price\": 125,\n    \"currency\": \"USD\"\n  },\n  \"schedule\": {\n    \"startDate\": \"2024-02-01\",\n    \"nextService\": \"2024-02-08\"\n  },\n  \"preferences\": {\n    \"preferredTime\": \"after 6 PM\",\n    \"contactMethod\": \"phone\",\n    \"specialInstructions\": \"Use eco-friendly products only\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/facility-care/subscribe",
              "host": ["{{baseUrl}}"],
              "path": ["api", "facility-care", "subscribe"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "LocalPro Plus",
      "item": [
        {
          "name": "Get Subscription Plans",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/localpro-plus/plans?type=provider",
              "host": ["{{baseUrl}}"],
              "path": ["api", "localpro-plus", "plans"],
              "query": [
                {
                  "key": "type",
                  "value": "provider"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Subscribe to Plan",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"planId\": \"{{planId}}\",\n  \"billingCycle\": \"monthly\",\n  \"paymentMethod\": \"credit_card\",\n  \"paymentDetails\": {\n    \"cardLast4\": \"1234\",\n    \"accountType\": \"visa\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/localpro-plus/subscribe",
              "host": ["{{baseUrl}}"],
              "path": ["api", "localpro-plus", "subscribe"]
            }
          },
          "response": []
        },
        {
          "name": "Get User Subscription",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/localpro-plus/subscription",
              "host": ["{{baseUrl}}"],
              "path": ["api", "localpro-plus", "subscription"]
            }
          },
          "response": []
        },
        {
          "name": "Get User Payments",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/localpro-plus/payments",
              "host": ["{{baseUrl}}"],
              "path": ["api", "localpro-plus", "payments"]
            }
          },
          "response": []
        },
        {
          "name": "Record Feature Usage",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"feature\": \"marketplace\",\n  \"action\": \"create_listing\",\n  \"details\": {\n    \"resource\": \"service\",\n    \"amount\": 1\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/localpro-plus/usage",
              "host": ["{{baseUrl}}"],
              "path": ["api", "localpro-plus", "usage"]
            }
          },
          "response": []
        },
        {
          "name": "Get Usage Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/localpro-plus/usage/analytics?period=30d",
              "host": ["{{baseUrl}}"],
              "path": ["api", "localpro-plus", "usage", "analytics"],
              "query": [
                {
                  "key": "period",
                  "value": "30d"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Trust & Verification",
      "item": [
        {
          "name": "Submit Verification Request",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"identity\",\n  \"documents\": [\n    {\n      \"name\": \"driver_license.jpg\",\n      \"url\": \"https://example.com/documents/driver_license.jpg\",\n      \"type\": \"image\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/trust-verification/verify",
              "host": ["{{baseUrl}}"],
              "path": ["api", "trust-verification", "verify"]
            }
          },
          "response": []
        },
        {
          "name": "Get Verification Requests",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/trust-verification/requests?status=pending",
              "host": ["{{baseUrl}}"],
              "path": ["api", "trust-verification", "requests"],
              "query": [
                {
                  "key": "status",
                  "value": "pending"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Review Verification Request (Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"approved\",\n  \"notes\": \"Identity verification approved\",\n  \"rejectionReason\": null\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/trust-verification/requests/{{verificationRequestId}}/review",
              "host": ["{{baseUrl}}"],
              "path": ["api", "trust-verification", "requests", "{{verificationRequestId}}", "review"]
            }
          },
          "response": []
        },
        {
          "name": "Get Trust Score",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/trust-verification/trust-score",
              "host": ["{{baseUrl}}"],
              "path": ["api", "trust-verification", "trust-score"]
            }
          },
          "response": []
        },
        {
          "name": "Create Dispute",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"bookingId\": \"{{bookingId}}\",\n  \"type\": \"service_quality\",\n  \"description\": \"Service was not completed as promised\",\n  \"evidence\": [\n    {\n      \"type\": \"photo\",\n      \"url\": \"https://example.com/evidence/photo1.jpg\",\n      \"description\": \"Before photo showing incomplete work\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/trust-verification/disputes",
              "host": ["{{baseUrl}}"],
              "path": ["api", "trust-verification", "disputes"]
            }
          },
          "response": []
        },
        {
          "name": "Get User Disputes",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/trust-verification/disputes?role=complainant",
              "host": ["{{baseUrl}}"],
              "path": ["api", "trust-verification", "disputes"],
              "query": [
                {
                  "key": "role",
                  "value": "complainant"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Resolve Dispute (Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"description\": \"Dispute resolved in favor of complainant\",\n  \"outcome\": \"favor_complainant\",\n  \"refundAmount\": 100,\n  \"penaltyPoints\": 5\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/trust-verification/disputes/{{disputeId}}/resolve",
              "host": ["{{baseUrl}}"],
              "path": ["api", "trust-verification", "disputes", "{{disputeId}}", "resolve"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Communication",
      "item": [
        {
          "name": "Create or Get Conversation",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"participantId\": \"{{participantId}}\",\n  \"bookingId\": \"{{bookingId}}\",\n  \"type\": \"booking\",\n  \"subject\": \"Service Discussion\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/communication/conversations",
              "host": ["{{baseUrl}}"],
              "path": ["api", "communication", "conversations"]
            }
          },
          "response": []
        },
        {
          "name": "Get User Conversations",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/communication/conversations?status=active",
              "host": ["{{baseUrl}}"],
              "path": ["api", "communication", "conversations"],
              "query": [
                {
                  "key": "status",
                  "value": "active"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Send Message",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"conversationId\": \"{{conversationId}}\",\n  \"content\": \"Hello, I have a question about the service\",\n  \"type\": \"text\",\n  \"attachments\": []\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/communication/messages",
              "host": ["{{baseUrl}}"],
              "path": ["api", "communication", "messages"]
            }
          },
          "response": []
        },
        {
          "name": "Get Conversation Messages",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/communication/conversations/{{conversationId}}/messages?page=1&limit=50",
              "host": ["{{baseUrl}}"],
              "path": ["api", "communication", "conversations", "{{conversationId}}", "messages"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "50"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get User Notifications",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/communication/notifications?isRead=false",
              "host": ["{{baseUrl}}"],
              "path": ["api", "communication", "notifications"],
              "query": [
                {
                  "key": "isRead",
                  "value": "false"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Mark Notification as Read",
          "request": {
            "method": "PUT",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/communication/notifications/{{notificationId}}/read",
              "host": ["{{baseUrl}}"],
              "path": ["api", "communication", "notifications", "{{notificationId}}", "read"]
            }
          },
          "response": []
        },
        {
          "name": "Mark All Notifications as Read",
          "request": {
            "method": "PUT",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/communication/notifications/read-all",
              "host": ["{{baseUrl}}"],
              "path": ["api", "communication", "notifications", "read-all"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Analytics",
      "item": [
        {
          "name": "Track Analytics Event",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"event\": \"service_view\",\n  \"category\": \"marketplace\",\n  \"subcategory\": \"cleaning\",\n  \"metadata\": {\n    \"serviceId\": \"{{serviceId}}\",\n    \"userId\": \"{{userId}}\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/analytics/track",
              "host": ["{{baseUrl}}"],
              "path": ["api", "analytics", "track"]
            }
          },
          "response": []
        },
        {
          "name": "Get User Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/user?period=monthly",
              "host": ["{{baseUrl}}"],
              "path": ["api", "analytics", "user"],
              "query": [
                {
                  "key": "period",
                  "value": "monthly"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Service Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/services/{{serviceId}}?period=monthly",
              "host": ["{{baseUrl}}"],
              "path": ["api", "analytics", "services", "{{serviceId}}"],
              "query": [
                {
                  "key": "period",
                  "value": "monthly"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Platform Analytics (Admin)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/platform?period=monthly",
              "host": ["{{baseUrl}}"],
              "path": ["api", "analytics", "platform"],
              "query": [
                {
                  "key": "period",
                  "value": "monthly"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Dashboard Data",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/analytics/dashboard",
              "host": ["{{baseUrl}}"],
              "path": ["api", "analytics", "dashboard"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Google Maps",
      "item": [
        {
          "name": "Geocode Address",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"address\": \"1600 Amphitheatre Parkway, Mountain View, CA\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/maps/geocode",
              "host": ["{{baseUrl}}"],
              "path": ["api", "maps", "geocode"]
            }
          },
          "response": []
        },
        {
          "name": "Reverse Geocode",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"lat\": 37.4220656,\n  \"lng\": -122.0840897\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/maps/reverse-geocode",
              "host": ["{{baseUrl}}"],
              "path": ["api", "maps", "reverse-geocode"]
            }
          },
          "response": []
        },
        {
          "name": "Search Places",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"input\": \"restaurants near Times Square\",\n  \"options\": {\n    \"types\": \"establishment\",\n    \"location\": \"40.7580,-73.9855\",\n    \"radius\": 1000\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/maps/places/search",
              "host": ["{{baseUrl}}"],
              "path": ["api", "maps", "places", "search"]
            }
          },
          "response": []
        },
        {
          "name": "Get Place Details",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/maps/places/ChIJ2eUgeAK6j4ARbn5u_wAGqWA",
              "host": ["{{baseUrl}}"],
              "path": ["api", "maps", "places", "ChIJ2eUgeAK6j4ARbn5u_wAGqWA"]
            }
          },
          "response": []
        },
        {
          "name": "Calculate Distance",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"origin\": {\n    \"lat\": 37.4220656,\n    \"lng\": -122.0840897\n  },\n  \"destination\": {\n    \"lat\": 37.7749,\n    \"lng\": -122.4194\n  },\n  \"options\": {\n    \"units\": \"imperial\",\n    \"mode\": \"driving\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/maps/distance",
              "host": ["{{baseUrl}}"],
              "path": ["api", "maps", "distance"]
            }
          },
          "response": []
        },
        {
          "name": "Find Nearby Places",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"location\": {\n    \"lat\": 40.7580,\n    \"lng\": -73.9855\n  },\n  \"radius\": 1000,\n  \"type\": \"restaurant\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/maps/nearby",
              "host": ["{{baseUrl}}"],
              "path": ["api", "maps", "nearby"]
            }
          },
          "response": []
        },
        {
          "name": "Validate Service Area",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"coordinates\": {\n    \"lat\": 40.7580,\n    \"lng\": -73.9855\n  },\n  \"serviceAreas\": [\"New York\", \"NYC\", \"Manhattan\", \"Brooklyn\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/maps/validate-service-area",
              "host": ["{{baseUrl}}"],
              "path": ["api", "maps", "validate-service-area"]
            }
          },
          "response": []
        },
        {
          "name": "Analyze Service Coverage",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"providerLocation\": {\n    \"lat\": 40.7580,\n    \"lng\": -73.9855\n  },\n  \"serviceAreas\": [\"New York\", \"Brooklyn\", \"Queens\"],\n  \"maxDistance\": 50000\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/maps/analyze-coverage",
              "host": ["{{baseUrl}}"],
              "path": ["api", "maps", "analyze-coverage"]
            }
          },
          "response": []
        },
        {
          "name": "Test Google Maps API Connection",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/maps/test",
              "host": ["{{baseUrl}}"],
              "path": ["api", "maps", "test"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "PayPal",
      "item": [
        {
          "name": "LocalPro Plus - PayPal Subscriptions",
          "item": [
            {
              "name": "Get Subscription Plans",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/localpro-plus/plans",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "localpro-plus", "plans"]
                }
              },
              "response": []
            },
            {
              "name": "Subscribe with PayPal",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code === 201) {",
                      "    const response = pm.response.json();",
                      "    if (response.data && response.data.paypalApprovalUrl) {",
                      "        console.log('PayPal Approval URL:', response.data.paypalApprovalUrl);",
                      "    }",
                      "    if (response.data && response.data.subscription && response.data.subscription.payment && response.data.subscription.payment.paypalSubscriptionId) {",
                      "        pm.collectionVariables.set('paypalSubscriptionId', response.data.subscription.payment.paypalSubscriptionId);",
                      "    }",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"planId\": \"plan_id_here\",\n  \"billingCycle\": \"monthly\",\n  \"paymentMethod\": \"paypal\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/localpro-plus/subscribe",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "localpro-plus", "subscribe"]
                }
              },
              "response": []
            },
            {
              "name": "Approve PayPal Subscription",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"subscriptionId\": \"{{paypalSubscriptionId}}\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/localpro-plus/paypal/approve",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "localpro-plus", "paypal", "approve"]
                }
              },
              "response": []
            },
            {
              "name": "Cancel PayPal Subscription",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"subscriptionId\": \"{{paypalSubscriptionId}}\",\n  \"reason\": \"User requested cancellation\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/localpro-plus/paypal/cancel",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "localpro-plus", "paypal", "cancel"]
                }
              },
              "response": []
            },
            {
              "name": "Get User Subscription",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/localpro-plus/subscription",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "localpro-plus", "subscription"]
                }
              },
              "response": []
            },
            {
              "name": "Get User Payments",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/localpro-plus/payments",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "localpro-plus", "payments"]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Marketplace - PayPal Bookings",
          "item": [
            {
              "name": "Get Services",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/marketplace/services",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "marketplace", "services"]
                }
              },
              "response": []
            },
            {
              "name": "Create Booking with PayPal",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code === 201) {",
                      "    const response = pm.response.json();",
                      "    if (response.data && response.data.paypalApprovalUrl) {",
                      "        console.log('PayPal Approval URL:', response.data.paypalApprovalUrl);",
                      "    }",
                      "    if (response.data && response.data.booking && response.data.booking.paypalOrderId) {",
                      "        pm.collectionVariables.set('paypalOrderId', response.data.booking.paypalOrderId);",
                      "    }",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"serviceId\": \"service_id_here\",\n  \"scheduledDate\": \"2024-01-15T10:00:00Z\",\n  \"address\": {\n    \"street\": \"123 Main St\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zipCode\": \"10001\",\n    \"coordinates\": {\n      \"lat\": 40.7128,\n      \"lng\": -74.0060\n    }\n  },\n  \"notes\": \"Please call before arriving\",\n  \"paymentMethod\": \"paypal\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/marketplace/bookings",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "marketplace", "bookings"]
                }
              },
              "response": []
            },
            {
              "name": "Approve PayPal Booking Payment",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"orderId\": \"{{paypalOrderId}}\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/marketplace/bookings/paypal/approve",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "marketplace", "bookings", "paypal", "approve"]
                }
              },
              "response": []
            },
            {
              "name": "Get PayPal Order Details",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/marketplace/bookings/paypal/order/{{paypalOrderId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "marketplace", "bookings", "paypal", "order", "{{paypalOrderId}}"]
                }
              },
              "response": []
            },
            {
              "name": "Get User Bookings",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/marketplace/bookings",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "marketplace", "bookings"]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Supplies - PayPal Orders",
          "item": [
            {
              "name": "Get Products",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/supplies/products",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "supplies", "products"]
                }
              },
              "response": []
            },
            {
              "name": "Create Order with PayPal",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code === 201) {",
                      "    const response = pm.response.json();",
                      "    if (response.data && response.data.paypalApprovalUrl) {",
                      "        console.log('PayPal Approval URL:', response.data.paypalApprovalUrl);",
                      "    }",
                      "    if (response.data && response.data.order && response.data.order.paypalOrderId) {",
                      "        pm.collectionVariables.set('paypalOrderId', response.data.order.paypalOrderId);",
                      "    }",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"items\": [\n    {\n      \"productId\": \"product_id_here\",\n      \"quantity\": 2,\n      \"price\": 25.99\n    }\n  ],\n  \"shippingAddress\": {\n    \"street\": \"123 Main St\",\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"zipCode\": \"10001\",\n    \"country\": \"US\"\n  },\n  \"paymentMethod\": \"paypal\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/supplies/orders",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "supplies", "orders"]
                }
              },
              "response": []
            },
            {
              "name": "Approve PayPal Order Payment",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"orderId\": \"{{paypalOrderId}}\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/supplies/orders/paypal/approve",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "supplies", "orders", "paypal", "approve"]
                }
              },
              "response": []
            },
            {
              "name": "Get PayPal Order Details",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/supplies/orders/paypal/order/{{paypalOrderId}}",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "supplies", "orders", "paypal", "order", "{{paypalOrderId}}"]
                }
              },
              "response": []
            },
            {
              "name": "Get User Orders",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/supplies/orders",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "supplies", "orders"]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "Finance - PayPal Repayments",
          "item": [
            {
              "name": "Get User Loans",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/finance/loans",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "finance", "loans"]
                }
              },
              "response": []
            },
            {
              "name": "Repay Loan with PayPal",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code === 201) {",
                      "    const response = pm.response.json();",
                      "    if (response.data && response.data.paypalApprovalUrl) {",
                      "        console.log('PayPal Approval URL:', response.data.paypalApprovalUrl);",
                      "    }",
                      "    if (response.data && response.data.paypalOrderId) {",
                      "        pm.collectionVariables.set('paypalOrderId', response.data.paypalOrderId);",
                      "    }",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 100.00,\n  \"paymentMethod\": \"paypal\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/finance/loans/:loanId/repay/paypal",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "finance", "loans", ":loanId", "repay", "paypal"]
                }
              },
              "response": []
            },
            {
              "name": "Approve PayPal Loan Repayment",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"orderId\": \"{{paypalOrderId}}\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/finance/loans/repay/paypal/approve",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "finance", "loans", "repay", "paypal", "approve"]
                }
              },
              "response": []
            },
            {
              "name": "Get User Salary Advances",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/finance/salary-advances",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "finance", "salary-advances"]
                }
              },
              "response": []
            },
            {
              "name": "Repay Salary Advance with PayPal",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "if (pm.response.code === 201) {",
                      "    const response = pm.response.json();",
                      "    if (response.data && response.data.paypalApprovalUrl) {",
                      "        console.log('PayPal Approval URL:', response.data.paypalApprovalUrl);",
                      "    }",
                      "    if (response.data && response.data.paypalOrderId) {",
                      "        pm.collectionVariables.set('paypalOrderId', response.data.paypalOrderId);",
                      "    }",
                      "}"
                    ]
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"amount\": 50.00,\n  \"paymentMethod\": \"paypal\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/finance/salary-advances/:salaryAdvanceId/repay/paypal",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "finance", "salary-advances", ":salaryAdvanceId", "repay", "paypal"]
                }
              },
              "response": []
            },
            {
              "name": "Approve PayPal Salary Advance Repayment",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"orderId\": \"{{paypalOrderId}}\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/finance/salary-advances/repay/paypal/approve",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "finance", "salary-advances", "repay", "paypal", "approve"]
                }
              },
              "response": []
            },
            {
              "name": "Get User Transactions",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/finance/transactions",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "finance", "transactions"]
                }
              },
              "response": []
            }
          ]
        },
        {
          "name": "PayPal Webhooks",
          "item": [
            {
              "name": "PayPal Webhook Handler",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "PayPal-Transmission-Id",
                    "value": "webhook-transmission-id",
                    "type": "text"
                  },
                  {
                    "key": "PayPal-Cert-Id",
                    "value": "webhook-cert-id",
                    "type": "text"
                  },
                  {
                    "key": "PayPal-Transmission-Sig",
                    "value": "webhook-signature",
                    "type": "text"
                  },
                  {
                    "key": "PayPal-Transmission-Time",
                    "value": "2024-01-01T00:00:00Z",
                    "type": "text"
                  },
                  {
                    "key": "PayPal-Auth-Algo",
                    "value": "SHA256withRSA",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"id\": \"WH-2W42680HY53905350-67976317FL5552\",\n  \"event_type\": \"PAYMENT.CAPTURE.COMPLETED\",\n  \"create_time\": \"2024-01-01T00:00:00Z\",\n  \"resource_type\": \"capture\",\n  \"resource_version\": \"2.0\",\n  \"event_version\": \"1.0\",\n  \"summary\": \"Payment completed for $ 10.00 USD\",\n  \"resource\": {\n    \"amount\": {\n      \"currency_code\": \"USD\",\n      \"value\": \"10.00\"\n    },\n    \"final_capture\": true,\n    \"seller_protection\": {\n      \"status\": \"ELIGIBLE\",\n      \"dispute_categories\": [\"ITEM_NOT_RECEIVED\", \"UNAUTHORIZED_TRANSACTION\"]\n    },\n    \"seller_receivable_breakdown\": {\n      \"gross_amount\": {\n        \"currency_code\": \"USD\",\n        \"value\": \"10.00\"\n      },\n      \"paypal_fee\": {\n        \"currency_code\": \"USD\",\n        \"value\": \"0.59\"\n      },\n      \"net_amount\": {\n        \"currency_code\": \"USD\",\n        \"value\": \"9.41\"\n      }\n    },\n    \"id\": \"2GG279541U471931P\",\n    \"status\": \"COMPLETED\",\n    \"supplementary_data\": {\n      \"related_ids\": {\n        \"order_id\": \"5O190127TN364715T\"\n      }\n    }\n  },\n  \"links\": [\n    {\n      \"href\": \"https://api.sandbox.paypal.com/v1/notifications/webhooks-events/WH-2W42680HY53905350-67976317FL5552\",\n      \"rel\": \"self\",\n      \"method\": \"GET\"\n    },\n    {\n      \"href\": \"https://api.sandbox.paypal.com/v1/notifications/webhooks-events/WH-2W42680HY53905350-67976317FL5552/resend\",\n      \"rel\": \"resend\",\n      \"method\": \"POST\"\n    }\n  ]\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/paypal/webhook",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "paypal", "webhook"]
                }
              },
              "response": []
            },
            {
              "name": "Get PayPal Webhook Events (Admin)",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/paypal/webhook/events",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "paypal", "webhook", "events"]
                }
              },
              "response": []
            }
          ]
        }
      ]
    },
    {
      "name": "PayMaya",
      "item": [
        {
          "name": "Create PayMaya Checkout",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('checkoutId', response.data.checkoutId);",
                  "    console.log('PayMaya checkout created, ID saved');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"totalAmount\": 1000.00,\n  \"currency\": \"PHP\",\n  \"description\": \"Service payment\",\n  \"referenceId\": \"ORDER-12345\",\n  \"buyer\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"+639171234567\"\n  },\n  \"items\": [\n    {\n      \"name\": \"Cleaning Service\",\n      \"code\": \"CLEAN-001\",\n      \"description\": \"House cleaning service\",\n      \"quantity\": 1,\n      \"totalAmount\": {\n        \"amount\": \"1000.00\",\n        \"currency\": \"PHP\"\n      }\n    }\n  ],\n  \"redirectUrl\": {\n    \"success\": \"https://yourdomain.com/payment/success\",\n    \"failure\": \"https://yourdomain.com/payment/failure\",\n    \"cancel\": \"https://yourdomain.com/payment/cancel\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/paymaya/checkout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "paymaya", "checkout"]
            }
          },
          "response": []
        },
        {
          "name": "Get PayMaya Checkout Details",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/paymaya/checkout/{{checkoutId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "paymaya", "checkout", "{{checkoutId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Create PayMaya Payment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('paymentId', response.data.paymentId);",
                  "    console.log('PayMaya payment created, ID saved');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"vaultId\": \"vault-12345\",\n  \"amount\": 1000.00,\n  \"currency\": \"PHP\",\n  \"referenceId\": \"PAYMENT-12345\",\n  \"buyer\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@example.com\"\n  },\n  \"description\": \"Subscription payment\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/paymaya/payment",
              "host": ["{{baseUrl}}"],
              "path": ["api", "paymaya", "payment"]
            }
          },
          "response": []
        },
        {
          "name": "Get PayMaya Payment Details",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/paymaya/payment/{{paymentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "paymaya", "payment", "{{paymentId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Create PayMaya Invoice",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('invoiceId', response.data.invoiceId);",
                  "    console.log('PayMaya invoice created, ID saved');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 1000.00,\n  \"currency\": \"PHP\",\n  \"description\": \"Service invoice\",\n  \"referenceId\": \"INVOICE-12345\",\n  \"buyer\": {\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@example.com\"\n  },\n  \"redirectUrl\": {\n    \"success\": \"https://yourdomain.com/payment/success\",\n    \"failure\": \"https://yourdomain.com/payment/failure\",\n    \"cancel\": \"https://yourdomain.com/payment/cancel\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/paymaya/invoice",
              "host": ["{{baseUrl}}"],
              "path": ["api", "paymaya", "invoice"]
            }
          },
          "response": []
        },
        {
          "name": "Get PayMaya Invoice Details",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/paymaya/invoice/{{invoiceId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "paymaya", "invoice", "{{invoiceId}}"]
            }
          },
          "response": []
        },
        {
          "name": "PayMaya Webhook Handler",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "x-paymaya-signature",
                "value": "webhook-signature-here"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"eventType\": \"CHECKOUT_SUCCESS\",\n  \"data\": {\n    \"checkoutId\": \"checkout-12345\",\n    \"requestReferenceNumber\": \"ORDER-12345\",\n    \"status\": \"SUCCESS\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/paymaya/webhook",
              "host": ["{{baseUrl}}"],
              "path": ["api", "paymaya", "webhook"]
            }
          },
          "response": []
        },
        {
          "name": "Get PayMaya Webhook Events (Admin)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/paymaya/webhook/events",
              "host": ["{{baseUrl}}"],
              "path": ["api", "paymaya", "webhook", "events"]
            }
          },
          "response": []
        },
        {
          "name": "Validate PayMaya Configuration (Admin)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/paymaya/config/validate",
              "host": ["{{baseUrl}}"],
              "path": ["api", "paymaya", "config", "validate"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Test Data Setup",
      "item": [
        {
          "name": "Create Test Service",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"House Cleaning\",\n  \"description\": \"Professional house cleaning service\",\n  \"category\": \"cleaning\",\n  \"price\": 50.00,\n  \"currency\": \"USD\",\n  \"duration\": 120,\n  \"serviceArea\": {\n    \"type\": \"Polygon\",\n    \"coordinates\": [[\n      [-74.006, 40.7128],\n      [-74.006, 40.7228],\n      [-73.996, 40.7228],\n      [-73.996, 40.7128],\n      [-74.006, 40.7128]\n    ]]\n  },\n  \"availability\": {\n    \"monday\": [\"09:00-17:00\"],\n    \"tuesday\": [\"09:00-17:00\"],\n    \"wednesday\": [\"09:00-17:00\"],\n    \"thursday\": [\"09:00-17:00\"],\n    \"friday\": [\"09:00-17:00\"]\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/marketplace/services",
              "host": ["{{baseUrl}}"],
              "path": ["api", "marketplace", "services"]
            }
          },
          "response": []
        },
        {
          "name": "Create Test Product",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Cleaning Supplies Kit\",\n  \"description\": \"Complete cleaning supplies kit\",\n  \"category\": \"cleaning\",\n  \"price\": 25.99,\n  \"currency\": \"USD\",\n  \"stock\": 100,\n  \"images\": [\"https://example.com/image1.jpg\"],\n  \"specifications\": {\n    \"weight\": \"2.5 lbs\",\n    \"dimensions\": \"12x8x4 inches\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/supplies/products",
              "host": ["{{baseUrl}}"],
              "path": ["api", "supplies", "products"]
            }
          },
          "response": []
        },
        {
          "name": "Apply for Test Loan",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 500.00,\n  \"purpose\": \"Equipment purchase\",\n  \"repaymentPeriod\": 6,\n  \"monthlyIncome\": 3000.00,\n  \"employmentStatus\": \"employed\",\n  \"employerName\": \"Test Company\",\n  \"employmentDuration\": 12\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/finance/loans/apply",
              "host": ["{{baseUrl}}"],
              "path": ["api", "finance", "loans", "apply"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Job Board",
      "item": [
        {
          "name": "Get All Jobs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/jobs?page=1&limit=10&category=technology&location=New York",
              "host": ["{{baseUrl}}"],
              "path": ["api", "jobs"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "category",
                  "value": "technology"
                },
                {
                  "key": "location",
                  "value": "New York"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Search Jobs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/jobs/search?q=developer&jobType=full_time&experienceLevel=mid&minSalary=50000&maxSalary=100000",
              "host": ["{{baseUrl}}"],
              "path": ["api", "jobs", "search"],
              "query": [
                {
                  "key": "q",
                  "value": "developer"
                },
                {
                  "key": "jobType",
                  "value": "full_time"
                },
                {
                  "key": "experienceLevel",
                  "value": "mid"
                },
                {
                  "key": "minSalary",
                  "value": "50000"
                },
                {
                  "key": "maxSalary",
                  "value": "100000"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Single Job",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/jobs/{{jobId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "jobs", "{{jobId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Create Job Posting (Employer)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Senior Software Developer\",\n  \"description\": \"We are looking for an experienced software developer to join our team...\",\n  \"company\": {\n    \"name\": \"Tech Solutions Inc\",\n    \"website\": \"https://techsolutions.com\",\n    \"size\": \"medium\",\n    \"industry\": \"Technology\",\n    \"location\": {\n      \"address\": \"123 Tech Street, San Francisco, CA\",\n      \"city\": \"San Francisco\",\n      \"state\": \"California\",\n      \"country\": \"United States\",\n      \"isRemote\": false,\n      \"remoteType\": \"on_site\"\n    }\n  },\n  \"category\": \"technology\",\n  \"subcategory\": \"software_development\",\n  \"jobType\": \"full_time\",\n  \"experienceLevel\": \"senior\",\n  \"salary\": {\n    \"min\": 80000,\n    \"max\": 120000,\n    \"currency\": \"USD\",\n    \"period\": \"yearly\",\n    \"isNegotiable\": true,\n    \"isConfidential\": false\n  },\n  \"benefits\": [\"health_insurance\", \"dental_insurance\", \"retirement_401k\", \"paid_time_off\"],\n  \"requirements\": {\n    \"skills\": [\"JavaScript\", \"React\", \"Node.js\", \"MongoDB\"],\n    \"education\": {\n      \"level\": \"bachelor\",\n      \"field\": \"Computer Science\",\n      \"isRequired\": true\n    },\n    \"experience\": {\n      \"years\": 5,\n      \"description\": \"5+ years of software development experience\"\n    },\n    \"certifications\": [\"AWS Certified Developer\"],\n    \"languages\": [\n      {\n        \"language\": \"English\",\n        \"proficiency\": \"native\"\n      }\n    ]\n  },\n  \"responsibilities\": [\n    \"Develop and maintain web applications\",\n    \"Collaborate with cross-functional teams\",\n    \"Write clean, maintainable code\",\n    \"Participate in code reviews\"\n  ],\n  \"qualifications\": [\n    \"Bachelor's degree in Computer Science\",\n    \"5+ years of software development experience\",\n    \"Strong knowledge of JavaScript and React\",\n    \"Experience with cloud platforms\"\n  ],\n  \"applicationProcess\": {\n    \"deadline\": \"2024-12-31T23:59:59.000Z\",\n    \"startDate\": \"2024-01-15T00:00:00.000Z\",\n    \"applicationMethod\": \"platform\",\n    \"contactEmail\": \"hr@techsolutions.com\",\n    \"instructions\": \"Please submit your resume and cover letter through our platform.\"\n  },\n  \"status\": \"active\",\n  \"visibility\": \"public\",\n  \"tags\": [\"javascript\", \"react\", \"nodejs\", \"fullstack\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/jobs",
              "host": ["{{baseUrl}}"],
              "path": ["api", "jobs"]
            }
          },
          "response": []
        },
        {
          "name": "Update Job Posting (Employer)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Senior Full Stack Developer\",\n  \"description\": \"Updated job description...\",\n  \"salary\": {\n    \"min\": 85000,\n    \"max\": 125000,\n    \"currency\": \"USD\",\n    \"period\": \"yearly\",\n    \"isNegotiable\": true\n  },\n  \"status\": \"active\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/jobs/{{jobId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "jobs", "{{jobId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Job Posting (Employer)",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/jobs/{{jobId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "jobs", "{{jobId}}"]
            }
          },
          "response": []
        },
        {
          "name": "Apply for Job",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"coverLetter\": \"I am excited to apply for the Senior Software Developer position at Tech Solutions Inc. With over 5 years of experience in full-stack development, I believe I would be a great fit for your team...\",\n  \"expectedSalary\": 95000,\n  \"availability\": \"2024-01-15T00:00:00.000Z\",\n  \"portfolio\": \"https://myportfolio.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/jobs/{{jobId}}/apply",
              "host": ["{{baseUrl}}"],
              "path": ["api", "jobs", "{{jobId}}", "apply"]
            }
          },
          "response": []
        },
        {
          "name": "Get My Applications",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/jobs/my-applications?status=pending&page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "jobs", "my-applications"],
              "query": [
                {
                  "key": "status",
                  "value": "pending"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get My Jobs (Employer)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/jobs/my-jobs?status=active&page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "jobs", "my-jobs"],
              "query": [
                {
                  "key": "status",
                  "value": "active"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Job Applications (Employer)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/jobs/{{jobId}}/applications?status=pending&page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "jobs", "{{jobId}}", "applications"],
              "query": [
                {
                  "key": "status",
                  "value": "pending"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Update Application Status (Employer)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"shortlisted\",\n  \"feedback\": {\n    \"rating\": 4,\n    \"comments\": \"Strong technical background and relevant experience. Moving to interview stage.\",\n    \"strengths\": [\"Strong technical skills\", \"Good communication\"],\n    \"weaknesses\": [\"Limited experience with our specific tech stack\"],\n    \"recommendation\": \"hire\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/jobs/{{jobId}}/applications/{{applicationId}}/status",
              "host": ["{{baseUrl}}"],
              "path": ["api", "jobs", "{{jobId}}", "applications", "{{applicationId}}", "status"]
            }
          },
          "response": []
        },
        {
          "name": "Upload Company Logo (Employer)",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "logo",
                  "type": "file",
                  "src": []
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/api/jobs/{{jobId}}/logo",
              "host": ["{{baseUrl}}"],
              "path": ["api", "jobs", "{{jobId}}", "logo"]
            }
          },
          "response": []
        },
        {
          "name": "Get Job Statistics (Employer)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/jobs/{{jobId}}/stats",
              "host": ["{{baseUrl}}"],
              "path": ["api", "jobs", "{{jobId}}", "stats"]
            }
          },
          "response": []
        }
      ]
    }
  ]
}
